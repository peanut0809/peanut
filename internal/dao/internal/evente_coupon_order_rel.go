// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// EventeCouponOrderRelDao is the data access object for table evente_coupon_order_rel.
type EventeCouponOrderRelDao struct {
	table   string                      // table is the underlying table name of the DAO.
	group   string                      // group is the database configuration group name of current DAO.
	columns EventeCouponOrderRelColumns // columns contains all the column names of Table for convenient usage.
}

// EventeCouponOrderRelColumns defines and stores column names for table evente_coupon_order_rel.
type EventeCouponOrderRelColumns struct {
	Id             string //
	OrgId          string //
	UserId         string // 用户id
	UserType       string // 1新用户 2 老用户
	CouponNumberId string // 优惠券number id
	CouponId       string // 优惠券id
	IncrementId    string // 订单increment_id
	PayStatus      string // 支付状态 0 未支付， 1已支付
	OrderMoney     string // 订单金额
	PayMoney       string // 支付金额
	CouponMoney    string // 优惠券金额
	CreateDate     string // 新增时间
	UpdateDate     string // 更新时间
}

// eventeCouponOrderRelColumns holds the columns for table evente_coupon_order_rel.
var eventeCouponOrderRelColumns = EventeCouponOrderRelColumns{
	Id:             "id",
	OrgId:          "org_id",
	UserId:         "user_id",
	UserType:       "user_type",
	CouponNumberId: "coupon_number_id",
	CouponId:       "coupon_id",
	IncrementId:    "increment_id",
	PayStatus:      "pay_status",
	OrderMoney:     "order_money",
	PayMoney:       "pay_money",
	CouponMoney:    "coupon_money",
	CreateDate:     "create_date",
	UpdateDate:     "update_date",
}

// NewEventeCouponOrderRelDao creates and returns a new DAO object for table data access.
func NewEventeCouponOrderRelDao() *EventeCouponOrderRelDao {
	return &EventeCouponOrderRelDao{
		group:   "default",
		table:   "evente_coupon_order_rel",
		columns: eventeCouponOrderRelColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *EventeCouponOrderRelDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *EventeCouponOrderRelDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *EventeCouponOrderRelDao) Columns() EventeCouponOrderRelColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *EventeCouponOrderRelDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *EventeCouponOrderRelDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *EventeCouponOrderRelDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
