// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// EventeECardActivationDao is the data access object for table evente_e_card_activation.
type EventeECardActivationDao struct {
	table   string                       // table is the underlying table name of the DAO.
	group   string                       // group is the database configuration group name of current DAO.
	columns EventeECardActivationColumns // columns contains all the column names of Table for convenient usage.
}

// EventeECardActivationColumns defines and stores column names for table evente_e_card_activation.
type EventeECardActivationColumns struct {
	Id               string // 自增id
	OrgId            string // 主办id
	CardId           string // E通卡id
	Number           string // 生成数量
	ActivationNumber string // 激活数量
	CreateDate       string // 生成时间(创建时间)
	UpdateDate       string // 更新时间
}

// eventeECardActivationColumns holds the columns for table evente_e_card_activation.
var eventeECardActivationColumns = EventeECardActivationColumns{
	Id:               "id",
	OrgId:            "org_id",
	CardId:           "card_id",
	Number:           "number",
	ActivationNumber: "activation_number",
	CreateDate:       "create_date",
	UpdateDate:       "update_date",
}

// NewEventeECardActivationDao creates and returns a new DAO object for table data access.
func NewEventeECardActivationDao() *EventeECardActivationDao {
	return &EventeECardActivationDao{
		group:   "default",
		table:   "evente_e_card_activation",
		columns: eventeECardActivationColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *EventeECardActivationDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *EventeECardActivationDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *EventeECardActivationDao) Columns() EventeECardActivationColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *EventeECardActivationDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *EventeECardActivationDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *EventeECardActivationDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
