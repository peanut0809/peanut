// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// EventeVoucherCodeExtendDao is the data access object for table evente_voucher_code_extend.
type EventeVoucherCodeExtendDao struct {
	table   string                         // table is the underlying table name of the DAO.
	group   string                         // group is the database configuration group name of current DAO.
	columns EventeVoucherCodeExtendColumns // columns contains all the column names of Table for convenient usage.
}

// EventeVoucherCodeExtendColumns defines and stores column names for table evente_voucher_code_extend.
type EventeVoucherCodeExtendColumns struct {
	Id            string //
	OrgId         string //
	VoucherCodeId string // 优惠码ID
	ApplyType     string // 适用方式 同主表 1全部产品 2指定参与 3指定不参与
	ProductType   string // 产品类型 （event活动 goods商品）
	ProductId     string // 产品id
	AllScreenings string // 是否全部场次 0 否 1 是
	ScreeningsId  string // 场次id集合,以,号分割，只在product_type=event&&all_screenings=0 时有效
	Status        string // 1-正常，2-删除
	CreateDate    string // 新增时间
	UpdateDate    string // 更新时间
}

// eventeVoucherCodeExtendColumns holds the columns for table evente_voucher_code_extend.
var eventeVoucherCodeExtendColumns = EventeVoucherCodeExtendColumns{
	Id:            "id",
	OrgId:         "org_id",
	VoucherCodeId: "voucher_code_id",
	ApplyType:     "apply_type",
	ProductType:   "product_type",
	ProductId:     "product_id",
	AllScreenings: "all_screenings",
	ScreeningsId:  "screenings_id",
	Status:        "status",
	CreateDate:    "create_date",
	UpdateDate:    "update_date",
}

// NewEventeVoucherCodeExtendDao creates and returns a new DAO object for table data access.
func NewEventeVoucherCodeExtendDao() *EventeVoucherCodeExtendDao {
	return &EventeVoucherCodeExtendDao{
		group:   "default",
		table:   "evente_voucher_code_extend",
		columns: eventeVoucherCodeExtendColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *EventeVoucherCodeExtendDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *EventeVoucherCodeExtendDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *EventeVoucherCodeExtendDao) Columns() EventeVoucherCodeExtendColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *EventeVoucherCodeExtendDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *EventeVoucherCodeExtendDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *EventeVoucherCodeExtendDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
