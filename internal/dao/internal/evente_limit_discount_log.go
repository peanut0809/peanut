// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// EventeLimitDiscountLogDao is the data access object for table evente_limit_discount_log.
type EventeLimitDiscountLogDao struct {
	table   string                        // table is the underlying table name of the DAO.
	group   string                        // group is the database configuration group name of current DAO.
	columns EventeLimitDiscountLogColumns // columns contains all the column names of Table for convenient usage.
}

// EventeLimitDiscountLogColumns defines and stores column names for table evente_limit_discount_log.
type EventeLimitDiscountLogColumns struct {
	Id             string // 主键ID
	OrgId          string // 主办ID
	BeforeJsonData string // 修改之前操作记录数据
	AfterJsonData  string // 修改之后操作记录数据
	CreateDate     string // 创建时间
}

// eventeLimitDiscountLogColumns holds the columns for table evente_limit_discount_log.
var eventeLimitDiscountLogColumns = EventeLimitDiscountLogColumns{
	Id:             "id",
	OrgId:          "org_id",
	BeforeJsonData: "before_json_data",
	AfterJsonData:  "after_json_data",
	CreateDate:     "create_date",
}

// NewEventeLimitDiscountLogDao creates and returns a new DAO object for table data access.
func NewEventeLimitDiscountLogDao() *EventeLimitDiscountLogDao {
	return &EventeLimitDiscountLogDao{
		group:   "default",
		table:   "evente_limit_discount_log",
		columns: eventeLimitDiscountLogColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *EventeLimitDiscountLogDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *EventeLimitDiscountLogDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *EventeLimitDiscountLogDao) Columns() EventeLimitDiscountLogColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *EventeLimitDiscountLogDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *EventeLimitDiscountLogDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *EventeLimitDiscountLogDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
