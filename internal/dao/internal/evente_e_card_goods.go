// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// EventeECardGoodsDao is the data access object for table evente_e_card_goods.
type EventeECardGoodsDao struct {
	table   string                  // table is the underlying table name of the DAO.
	group   string                  // group is the database configuration group name of current DAO.
	columns EventeECardGoodsColumns // columns contains all the column names of Table for convenient usage.
}

// EventeECardGoodsColumns defines and stores column names for table evente_e_card_goods.
type EventeECardGoodsColumns struct {
	Id           string //
	OrgId        string // 主办id
	CardId       string // 年卡id
	Name         string // 商品名称
	ImgId        string // 商品图片ID
	Price        string // 商品原价
	GiveNumber   string // 赠送数量
	FetchedCount string // 已经领取的次数
	Status       string // 1-正常，2-删除,3-手动关闭
	CreateDate   string // 新增时间
	UpdateDate   string // 更新时间
}

// eventeECardGoodsColumns holds the columns for table evente_e_card_goods.
var eventeECardGoodsColumns = EventeECardGoodsColumns{
	Id:           "id",
	OrgId:        "org_id",
	CardId:       "card_id",
	Name:         "name",
	ImgId:        "img_id",
	Price:        "price",
	GiveNumber:   "give_number",
	FetchedCount: "fetched_count",
	Status:       "status",
	CreateDate:   "create_date",
	UpdateDate:   "update_date",
}

// NewEventeECardGoodsDao creates and returns a new DAO object for table data access.
func NewEventeECardGoodsDao() *EventeECardGoodsDao {
	return &EventeECardGoodsDao{
		group:   "default",
		table:   "evente_e_card_goods",
		columns: eventeECardGoodsColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *EventeECardGoodsDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *EventeECardGoodsDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *EventeECardGoodsDao) Columns() EventeECardGoodsColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *EventeECardGoodsDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *EventeECardGoodsDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *EventeECardGoodsDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
