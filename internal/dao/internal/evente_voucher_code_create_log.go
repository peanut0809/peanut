// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// EventeVoucherCodeCreateLogDao is the data access object for table evente_voucher_code_create_log.
type EventeVoucherCodeCreateLogDao struct {
	table   string                            // table is the underlying table name of the DAO.
	group   string                            // group is the database configuration group name of current DAO.
	columns EventeVoucherCodeCreateLogColumns // columns contains all the column names of Table for convenient usage.
}

// EventeVoucherCodeCreateLogColumns defines and stores column names for table evente_voucher_code_create_log.
type EventeVoucherCodeCreateLogColumns struct {
	Id             string //
	OrgId          string // 主办id
	VoucherCodeId  string // 主办id
	Total          string // 总数
	Success        string // 成功数量
	Fail           string // 失败数量
	ActivationType string // 生成类型 1:系统生成 2:手动导入 3：手动输入
	FailList       string //
	CreateDate     string // 新增时间
	UpdateDate     string // 更新时间
}

// eventeVoucherCodeCreateLogColumns holds the columns for table evente_voucher_code_create_log.
var eventeVoucherCodeCreateLogColumns = EventeVoucherCodeCreateLogColumns{
	Id:             "id",
	OrgId:          "org_id",
	VoucherCodeId:  "voucher_code_id",
	Total:          "total",
	Success:        "success",
	Fail:           "fail",
	ActivationType: "activation_type",
	FailList:       "fail_list",
	CreateDate:     "create_date",
	UpdateDate:     "update_date",
}

// NewEventeVoucherCodeCreateLogDao creates and returns a new DAO object for table data access.
func NewEventeVoucherCodeCreateLogDao() *EventeVoucherCodeCreateLogDao {
	return &EventeVoucherCodeCreateLogDao{
		group:   "default",
		table:   "evente_voucher_code_create_log",
		columns: eventeVoucherCodeCreateLogColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *EventeVoucherCodeCreateLogDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *EventeVoucherCodeCreateLogDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *EventeVoucherCodeCreateLogDao) Columns() EventeVoucherCodeCreateLogColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *EventeVoucherCodeCreateLogDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *EventeVoucherCodeCreateLogDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *EventeVoucherCodeCreateLogDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
